[
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/dates.txt",
    "NAME": "AMonths()",
    "CATEGORY": "Date",
    "ONELINER": "Returns an array with the months names.",
    "SYNTAX": "AMonths() --> aMonths",
    "ARGUMENTS": "None",
    "RETURNS": "<aMonths> The array which holds the months names.",
    "DESCRIPTION": "This function returns an array with all the months names in the\nselected current language.",
    "EXAMPLES": "LOCAL aMonths := AMonths()\n? aMonths[ 1 ]  // --> January\n? aMonths[ 1 ]  // --> Enero (if the selected language is Spanish)",
    "STATUS": "R",
    "COMPLIANCE": "H",
    "PLATFORMS": "All",
    "FILES": "Library is hbmisc",
    "SEEALSO": "ADays()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/dates.txt",
    "NAME": "ADays()",
    "CATEGORY": "Date",
    "ONELINER": "Returns an array with the days names.",
    "SYNTAX": "ADays() --> aDays",
    "ARGUMENTS": "None",
    "RETURNS": "<aDays>   The array which holds the days names.",
    "DESCRIPTION": "This function returns an array with all the days names in the\nselected current language.",
    "EXAMPLES": "LOCAL aDays := ADays()\n? aDays[ 1 ]  // --> Sunday\n? aDays[ 1 ]  // --> Domingo (if the selected language is Spanish)",
    "STATUS": "R",
    "COMPLIANCE": "H",
    "PLATFORMS": "All",
    "FILES": "Library is hbmisc",
    "SEEALSO": "ADays()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/dates.txt",
    "NAME": "IsLeapYear()",
    "CATEGORY": "Date",
    "ONELINER": "Checks if the given date is a leap year.",
    "SYNTAX": "IsLeapYear( <dDate> ) --> lTrueOrFalse",
    "ARGUMENTS": "<dDate>   A valid date.",
    "RETURNS": "<lTrueOrFalse>  A logical that indicates if the date year is leap",
    "DESCRIPTION": "This function returns true if the given date is a leap year and\nfalse if isn't.",
    "EXAMPLES": "? IsLeapYear( 0d20000101 )  // --> .T.\n? IsLeapYear( 0d20010101 )  // --> .F.",
    "STATUS": "R",
    "COMPLIANCE": "H",
    "PLATFORMS": "All",
    "FILES": "Library is hbmisc",
    "SEEALSO": "hbmisc_DaysInMonth()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/dates.txt",
    "NAME": "hbmisc_DaysInMonth()",
    "CATEGORY": "Date",
    "ONELINER": "Gets the days in a month.",
    "SYNTAX": "hbmisc_DaysInMonth( <dDate> ) --> nDays",
    "ARGUMENTS": "<dDate>   A valid date.",
    "RETURNS": "<nDays>   The number of days of the month.",
    "DESCRIPTION": "This function returns the number of days of the given date month.",
    "EXAMPLES": "? hbmisc_DaysInMonth( 0d20000101 )  // --> 31\n? hbmisc_DaysInMonth( 0d20000201 )  // --> 29",
    "STATUS": "R",
    "COMPLIANCE": "H",
    "PLATFORMS": "All",
    "FILES": "Library is hbmisc",
    "SEEALSO": "IsLeapYear()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/dates.txt",
    "NAME": "WoY()",
    "CATEGORY": "Date",
    "ONELINER": "Gets the week number of the year.",
    "SYNTAX": "WoY( <dDate>, <lIso> ) --> nWeek",
    "ARGUMENTS": "<dDate>   A valid date.",
    "RETURNS": "<nWeek>   The week number\n<lIso>    Flag that indicates if <nWeek> is in ISO format.",
    "DESCRIPTION": "This function returns the week number of the year for a given date.\nIt returns the week number in ISO format (range 0 - 52, by default\nor passing TRUE as second parameter) or 1 - 52 if <lIso> is FALSE.",
    "EXAMPLES": "? WoY( 0d20000131 )       // --> 3\n? WoY( 0d20000131, .F. )  // --> 4",
    "STATUS": "R",
    "COMPLIANCE": "H",
    "PLATFORMS": "All",
    "FILES": "Library is hbmisc",
    "SEEALSO": "DoY()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/fileread.txt",
    "NAME": "TFileRead()",
    "CATEGORY": "File",
    "ONELINER": "Read a file one line at a time",
    "SYNTAX": "oFile := TFileRead():New( <cFileName> [, <nReadSize> ] )",
    "ARGUMENTS": "<cFileName> is the required name of the file to be read.\n\n<nReadSize> is the optional size to use when reading from the file.\nThe default value is 4096 and the allowed range is 1 through 65535.\nAny value outside of this range causes the default value to be used.",
    "RETURNS": "An instance of the File Reader class",
    "DESCRIPTION": "TFileRead() is used to access a file one line at a time. You must\nspecify the name of the file when an instance of the class is created.\n\nThe class data should be considered private to the class.\n\nThe class methods are as follows:\n\n`:New()`                Creates a new instance of the TFileRead() class.\n\n`:Open( [<nFlags>] )`   Opens the file for reading. The optional <nFlags>\n                        parameter can use any of the file open flags from\n                        fileio.ch. The default is `FO_READ + FO_SHARED`.\n                        Calling this method when the file is already\n                        open causes the next `:ReadLine()` to start over\n                        from the beginning of the file.\n\n`:Close()`              Closes the file.\n\n`:ReadLine()`           Returns one line from the file, stripping the\n                        newline characters. The following sequences are\n                        treated as one newline: 1) CR CR LF; 2) CR LF;\n                        3) LF; and 4) CR. Note: LF CR is 2 newlines.\n`:Name()`               Returns the name of the file.\n\n`:IsOpen()`             Returns .T. if the file is open.\n\n`:MoreToRead()`         Returns .T. if there are more lines to be read\n                        (think of it as an inverse EOF function).\n\n`:Error()`              Returns .T. if an error has occurred.\n\n`:ErrorNo()`            Returns the current error code.\n\n`:ErrorMsg( [<cPre>] )` Returns a formatted error message.",
    "EXAMPLES": "LOCAL oFile := TFileRead():New( \"test.txt\" )\noFile:Open()\nIF oFile:Error()\n   ? oFile:ErrorMsg( \"FileRead:\" )\nELSE\n   DO WHILE oFile:MoreToRead()\n      ? oFile:ReadLine()\n   ENDDO\n   oFile:Close()\nENDIF",
    "STATUS": "R",
    "COMPLIANCE": "NA",
    "FILES": "Library is hbmisc"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "IsBin()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Check if the value is a binary number",
    "SYNTAX": "IsBin( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> String to be checked",
    "RETURNS": "<cNr> .T. if the string is binary, otherwise .F.",
    "DESCRIPTION": "check if the passed string is a binary number or not",
    "FILES": "Library is hbmisc",
    "SEEALSO": "IsOctal(), IsDec(), IsHexa()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "IsOctal()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Check if the value is a octal number",
    "SYNTAX": "IsOctal( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> String to be checked",
    "RETURNS": "<cNr> .T. if the string is octal; otherwise .F.",
    "DESCRIPTION": "check if the passed string is a octal number or not",
    "FILES": "Library is hbmisc",
    "SEEALSO": "IsBin(), IsDec(), IsHexa()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "IsDec()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Check if the value is a Decimal  Number",
    "SYNTAX": "IsDec( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> String to be checked",
    "RETURNS": "<cNr> .T. if the string is decimal; otherwise .F.",
    "DESCRIPTION": "check if the passed string is a decimal number or not",
    "FILES": "Library is hbmisc",
    "SEEALSO": "IsOctal(), IsBin(), IsHexa()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "IsHexa()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Check if the value is a hexadecimal number",
    "SYNTAX": "IsHexa( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> String to be checked",
    "RETURNS": "<cNr> .T. if the string is hexadecimal; otherwise .F.",
    "DESCRIPTION": "check if the passed string is a hexadecimal number or not",
    "FILES": "Library is hbmisc",
    "SEEALSO": "IsOctal(), IsDec(), IsBin()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "DecToBin()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Converts a decimal value to binary",
    "SYNTAX": "DecToBin( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> Number to be converted",
    "RETURNS": "<cNr>  Number converted",
    "DESCRIPTION": "This function converts a string <cN> from an decimal value\nto an binary value.",
    "FILES": "Library is hbmisc",
    "SEEALSO": "DecToHexa(), DecToOctal()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "DecToOctal()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Converts a decimal value to octal",
    "SYNTAX": "DecToOctal( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> Number to be converted",
    "RETURNS": "<cNr>  Number converted",
    "DESCRIPTION": "This function converts a string <cN> from an decimal value\nto an octal value.",
    "FILES": "Library is hbmisc",
    "SEEALSO": "DecToHexa(), DecToBin()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "DecToHexa()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Converts a decimal value to hexadecimal",
    "SYNTAX": "DecToHexa( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> Number to be converted",
    "RETURNS": "<cNr>  Number converted",
    "DESCRIPTION": "This function converts a string <cN> from an decimal value\nto an hexadecimal value.",
    "FILES": "Library is hbmisc",
    "SEEALSO": "DecToBin(), DecToOctal()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "BinToDec()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Converts a binary value to decimal",
    "SYNTAX": "BinToDec( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> Number to be converted",
    "RETURNS": "<cNr>  Number converted",
    "DESCRIPTION": "This function converts a string <cN> from an binary value\nto a numeric decimal value.",
    "FILES": "Library is hbmisc",
    "SEEALSO": "OctalToDec(), HexaToDec()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "OctalToDec()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Converts a octal value to decimal",
    "SYNTAX": "OctalToDec( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> Number to be converted",
    "RETURNS": "<cNr>  Number converted",
    "DESCRIPTION": "This function converts a string <cN> from an octal value\nto a numeric decimal value.",
    "FILES": "Library is hbmisc",
    "SEEALSO": "BinToDec(), HexaToDec()"
  },
  {
    "_COMPONENT": "hbmisc",
    "_LANG": "en",
    "_DOCSOURCE": "./hbmisc/doc/en/nconvert.txt",
    "NAME": "HexaToDec()",
    "CATEGORY": "Conversion Tools",
    "ONELINER": "Converts a hexadecimal value to decimal",
    "SYNTAX": "HexaToDec( <cN> ) --> cNr",
    "ARGUMENTS": "<cN> Number to be converted",
    "RETURNS": "<cNr>  Number converted",
    "DESCRIPTION": "This function converts a string <cN> from an hexadecimal value\nto a numeric decimal value.",
    "FILES": "Library is hbmisc",
    "SEEALSO": "OctalToDec(), BinToDec()"
  }
]
